# -*- coding: utf-8 -*-
"""Irisdatavisualization.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JhKCLkxlz7H5cu2yKXkhAu4iotTCulUy
"""

# Import necessary libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Set a style for the plots for consistency and clarity
sns.set(style="whitegrid")

# Load the Iris dataset directly from seaborn's repository
iris = sns.load_dataset('iris')

# Display the first few rows of the dataset and some statistics
print("Iris Dataset Preview:")
print(iris.head())
print("\nDataset Statistics:")
print(iris.describe())

# Scatter Plot: Visualizing the relationship between sepal length and sepal width, colored by species
plt.figure(figsize=(8, 6))
sns.scatterplot(data=iris, x='sepal_length', y='sepal_width', hue='species', palette='viridis')
plt.title('Sepal Length vs Sepal Width')
plt.xlabel('Sepal Length (cm)')
plt.ylabel('Sepal Width (cm)')
plt.legend(title='Species')
plt.tight_layout()
plt.savefig('scatter_plot.png')  # Save figure for later use (e.g., MLOps pipeline)
plt.show()

# Histogram: Distribution of petal length with a kernel density estimate overlay
plt.figure(figsize=(8, 6))
sns.histplot(data=iris, x='petal_length', bins=20, kde=True, color='skyblue')
plt.title('Distribution of Petal Length')
plt.xlabel('Petal Length (cm)')
plt.ylabel('Frequency')
plt.tight_layout()
plt.savefig('histogram.png')
plt.show()

# Box Plot: Comparing the distribution of petal width across species
plt.figure(figsize=(8, 6))
sns.boxplot(data=iris, x='species', y='petal_width', palette='Set2')
plt.title('Petal Width by Species')
plt.xlabel('Species')
plt.ylabel('Petal Width (cm)')
plt.tight_layout()
plt.savefig('box_plot.png')
plt.show()

# Correlation Heatmap: Compute correlation only for numeric columns to avoid conversion errors
plt.figure(figsize=(8, 6))
numeric_df = iris.select_dtypes(include=['number'])  # Select only numeric columns
corr = numeric_df.corr()
sns.heatmap(corr, annot=True, cmap='coolwarm', fmt=".2f")
plt.title('Correlation Matrix')
plt.tight_layout()
plt.savefig('heatmap.png')
plt.show()

# Pair Plot: Visualizing pairwise relationships with KDE on the diagonal for deeper insights
pair_plot = sns.pairplot(iris, hue='species', diag_kind='kde', palette='bright')
pair_plot.fig.suptitle('Pair Plot of Iris Dataset', y=1.02)
pair_plot.savefig('pair_plot.png')
plt.show()